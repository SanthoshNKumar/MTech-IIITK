#include <stdio.h>
#include <stdlib.h>

struct Node{
    int data;
    struct Node* next;
};

struct Node *head=NULL;
struct Node *tail=NULL;  

void insert_node(int val)
{
    struct Node *temp=(struct Node*)malloc(sizeof(struct Node));
    
    temp->data=val;
    
    if(head==NULL){
        head= temp;
        tail = temp;
        temp->next = head;
    }
    else{
        tail->next = temp;
        tail = temp;  
        tail->next = head;  
        }
    }
    
void display(struct Node* _node){  
    
    struct Node *current = _node;  
    
    if(_node == NULL){  
    }  
    else{  
         do{  
            printf("%d ", current->data);  
            current = current->next;  
        }while(current != _node);  
        printf("\n");  
    }  
}  

void reverseList(struct Node **head) 
{
    struct Node *prev, *cur, *next, *last;

    if (*head == NULL)
    {
        return;
    }

    last = *head;

    prev  = *head;
    cur   = (*head)->next;
    *head = (*head)->next;

    while (*head != last)
    {
        *head = (*head)->next;
        cur->next = prev;

        prev = cur;
        cur  = *head;
    }

    cur->next = prev;
    *head = prev; 
}

int search_item_location(struct Node *head,int item)  
{  
    struct Node *ptr;  
    int i=0,flag=1;  
    ptr = head;   
    if(ptr == NULL)  
    {  
        return -1;
    }  
    else  
    {   
        if(head ->data == item)  
        {  
            return i+1;
        flag=0;  
        }  
        else   
        {  
        while (ptr->next != head)  
        {  
            if(ptr->data == item)  
            {  
                return i+1;
                flag=0;  
                break;  
            }   
            else  
            {  
                flag=1;  
            }  
            i++;  
            ptr = ptr -> next;  
        }  
        }  
        if(flag != 0)  
        {  
           return -1;
        }  
    }     
}  

int main()
{
    
    insert_node(55);
    insert_node(66);
    insert_node(77);
    insert_node(88);
    
    printf("Search for the location of the item '66' in below the list");
    printf("\n");
    
    display(head);
    
    printf("Item found at location %d before Reverse\n",search_item_location(head,66));
    
    reverseList(&head);
    
    display(head);
    
    printf("Item found at location %d After Reverse\n",search_item_location(head,66));
    
    
}
